Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: rowIndex = 3
Output: [1,3,3,1]
Example 2:

Input: rowIndex = 0
Output: [1]
Example 3:

Input: rowIndex = 1
Output: [1,1]
 

Constraints:

0 <= rowIndex <= 33

Solution:

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<vector<int>> arr;
        arr.push_back({1});
        //arr[0][0]=1;
        //arr[1][0]=1;
        
        for(int i=1;i<=rowIndex;i++){
            vector<int> ans;
            ans.push_back(1);
            //arr[i][0]=1;
            //arr[i][i]=1;
            for(int j=1;j<i;j++){
                ans.push_back(arr[i-1][j]+arr[i-1][j-1]);
            }
            ans.push_back(1);
            
            arr.push_back(ans);
        }
        return arr[rowIndex];
    }
};
    
